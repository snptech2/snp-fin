# Implementation Roadmap - Enhanced Cash Flow Fix

## 🚨 Problemi Identificati

### Portfolio testbtc (DCA Bitcoin) - Incongruenze Critiche
- **Holdings quantity**: ✅ Corretto (0.0049 BTC con 1000 sats fee)
- **Costo Base Rimasto**: ❌ Mostra 100€, dovrebbe essere 250€  
- **ROI calculations**: ❌ Tre valori diversi (-8.32%, 101.68%, -100€ P&L)
- **Enhanced logic**: ❌ Non applicata correttamente ovunque

### Portfolio testcrypto (Crypto Wallet) - ROI Inconsistente  
- **Profitti Realizzati**: ✅ 85€ corretto
- **ROI**: ❌ Varia tra +120%, +170%, altri valori
- **Dovrebbe essere**: (85€ + 100.21€) ÷ 50€ = **370.42%**

## 🎯 Implementazione in 3 Fasi

### FASE 1: Correzioni Critiche (PRIORITÀ 1)

#### Backend API Fixes
**File da modificare:**
```
src/app/api/dca-portfolios/[id]/route.ts
src/app/api/crypto-portfolios/[id]/route.ts  
src/app/api/crypto-portfolios/route.ts
```

**Logica Enhanced da applicare:**
```javascript
// UNIFICA TUTTI I CALCOLI CON QUESTA LOGICA
const totalInvested = buyTransactions.reduce((sum, tx) => sum + tx.eurValue, 0)
const capitalRecovered = sellTransactions.reduce((sum, tx) => sum + tx.eurValue, 0)
const effectiveInvestment = Math.max(0, totalInvested - capitalRecovered)
const realizedProfit = Math.max(0, capitalRecovered - totalInvested)

// Per unrealized nel frontend:
const unrealizedProfit = currentValue - effectiveInvestment
const totalROI = ((realizedProfit + unrealizedProfit) / totalInvested) * 100
```

#### Frontend Calculation Fixes
**File da modificare:**
```
src/app/investments/page.tsx (calculateTotalROI function)
src/app/investments/[id]/page.tsx (totalROI calculation)
src/app/investments/crypto-portfolio/[id]/page.tsx
```

**Rimuovere calcoli duplicati e usare solo Enhanced stats dal backend.**

### FASE 2: Unificazione Completa

#### Standardizzare Enhanced Logic
**File da rivedere:**
```
src/app/api/dca-portfolios/route.ts (calculateEnhancedStats)
src/components/investments/DCAStatsGrid.tsx
src/app/accounts/page.tsx (breakdown calculations)
```

**Obiettivo**: Stessa logica Enhanced ovunque, rimuovere legacy calculations.

#### Frontend Consistency
**Assicurarsi che tutti i componenti mostrino:**
- totalInvested (invariante)
- capitalRecovered  
- effectiveInvestment (soldi a rischio)
- realizedProfit vs unrealizedProfit
- ROI calcolato allo stesso modo

### FASE 3: Swap Functionality

#### Nuove API da creare
```
src/app/api/crypto-portfolios/[id]/swap/route.ts
```

**Logica swap:**
```javascript
// Swap non modifica Enhanced metrics
// Solo redistribuisce holdings interni
// Due operazioni atomiche: sell asset A + buy asset B
// Ma senza impatto su totalInvested/capitalRecovered
```

#### UI Components
```
components/crypto/SwapModal.tsx
components/crypto/SwapInterface.tsx
```

**Integrazione in:**
```
src/app/investments/crypto-portfolio/[id]/page.tsx
```

## 📊 Test Cases per Validazione

### testbtc (DCA Bitcoin) - Valori Corretti Attesi
```
Transazioni:
- Buy: 0.01 BTC per 500€
- Sell: 0.005 BTC per 400€  
- Holdings: 0.0049 BTC (con 1000 sats fee)

Calcoli Enhanced:
totalInvested = 500€
capitalRecovered = 400€
effectiveInvestment = 100€
realizedProfit = 0€ (400€ < 500€)

Se BTC = 91.859€:
currentValue = 0.0049 × 91.859€ = 450,11€
unrealizedProfit = 450,11€ - 100€ = 350,11€
totalROI = (0€ + 350,11€) / 500€ = 70.02%
```

### testcrypto (Crypto Wallet) - Valori Corretti Attesi  
```
Transazioni SOL:
- Buy: 2 SOL per 50€ (25€ each)
- Sell: 1 SOL per 110€
- Holdings: 1 SOL

Calcoli Enhanced:
totalInvested = 50€
capitalRecovered = 110€  
effectiveInvestment = 0€ (fully recovered)
realizedProfit = 110€ - 50€ = 60€

Se SOL = 125,21€:
currentValue = 1 × 125,21€ = 125,21€
unrealizedProfit = 125,21€ - 0€ = 125,21€
totalROI = (60€ + 125,21€) / 50€ = 370.42%
```

## 🔧 File Priority List

### CRITICO (Fix immediato)
1. `src/app/api/dca-portfolios/[id]/route.ts` - Enhanced stats
2. `src/app/api/crypto-portfolios/[id]/route.ts` - Enhanced stats  
3. `src/app/investments/[id]/page.tsx` - ROI calculation
4. `src/app/investments/crypto-portfolio/[id]/page.tsx` - ROI calculation

### IMPORTANTE (Unificazione)
5. `src/app/investments/page.tsx` - Overview calculations
6. `src/app/api/crypto-portfolios/route.ts` - List stats
7. `src/components/investments/DCAStatsGrid.tsx` - Display logic

### FEATURE (Swap)
8. Nuove API per swap functionality
9. Nuovi componenti UI per swap
10. Integrazione con Enhanced logic

## ⚠️ Note Implementazione

- **Sempre testare** con portfolio esistenti (testbtc, testcrypto)
- **Backup logic**: Mantenere compatibility temporanea se necessario
- **Enhanced = source of truth**: Tutti i calcoli devono derivare da Enhanced stats
- **Frontend semplificato**: Rimuovere calcoli duplicati, usare solo backend stats
- **Swap = no cash flow impact**: Solo redistribuzione holdings interna

---

**Per nuova chat**: Leggere questo documento + `DOCS/EnhancedCashFlowLogic.txt`, poi procedere con FASE 1.